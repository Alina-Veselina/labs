//Задание к теме 13.
//1. Дано вещественное число — цена 1 кг конфет. Вывести стоимость 0.1, 0.2, . . . , 1 кг конфет.
//2. Дано целое число N (> 0). Найти произведение 1.1 · 1.2 · 1.3 · . . . (N сомножителей).
//3. Дано целое число N (> 0). Найти квадрат данного числа, используя для его вычисления следующую формулу: N2 = 1 + 3 + 5 + . . . + (2·N − 1). После добавления к сумме каждого слагаемого выводить текущее значение суммы
//4. Дано вещественное число A и целое число N (> 0). Используя один цикл, найти сумму 1 + A + A2 + A3 + . . . + AN
//5. Дано вещественное число A и целое число N (> 0). Используя один цикл, найти значение выражения 
//1 − A + A2 − A3 + . . . ± AN . 
//Условный оператор не использовать.

#include <iostream>
#include <math.h>

using namespace std;

int main()
{
	setlocale(LC_ALL, "Russian");
	float x, y;
	int menu, a, b, c, i;
	char ch = ' ';
	while (true) {
		cout << "Введите номер задания (1-5, 0 - выход): ";
		cin >> menu;
		switch (menu)
		{
		case 0:
		{
		    return false;
		} break;
		case 1:
		{
			cout << "Введите цену за кило конфет в рублях: ";
			cin >> x;
			for (i = 1; i <= 10; i++)
			{
				cout << i * 0.1 << " кг конфет стоит " << x * i / 10 << " рублей." << endl;
			}
		} break;

		case 2:
		{
			cout << "Введите целое число: ";
			cin >> a;
			x = 1;
			for (i = 1; i <= a; i++)
			{
				x *= (1 + i * 0.1);
			}
			cout << "Результат равен " << x << "." << endl;
		} break;

		case 3:
		{
			cout << "Введите целое число: ";
			cin >> a;
			b = 0;
			for (i = 1; i <= a; i++)
			{
				b += 2 * i - 1;
				cout << b << endl;
			}
		} break;

		case 4:
		{
			cout << "Введите вещественное число А и целое число N: ";
			cin >> x >> a;
			y = 0;
			for (i = 0; i <= a; i++)
			{
				y += pow(x, i);
			}
			cout << "Результат равен " << y << "." << endl;
		} break;

		case 5:
		{
			cout << "Введите вещественное число А и целое число N: ";
			cin >> x >> a;
			y = 0;
			b = -1;
			for (i = 0; i <= a; i++)
			{
				b = -b;
				y += (pow(x, i) * b);
			}
			cout << "Результат равен " << y << "." << endl;
		} break;
		}
	}
}
